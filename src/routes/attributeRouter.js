import { Router } from 'express';
import { catchError } from '../middlewares/errorHandlers';
import * as abilityScoreController from '../controllers/attributes/abilityScoreController';
import * as classController from '../controllers/attributes/classController';
import * as conditionController from '../controllers/attributes/conditionController';
import * as damageController from '../controllers/attributes/damageController';
import * as equipmentCategoryController from '../controllers/attributes/equipmentCategoryController';
import * as equipmentController from '../controllers/attributes/equipmentController';
import * as featureController from '../controllers/attributes/featureController';
import * as languageController from '../controllers/attributes/languageController';
import * as levelController from '../controllers/attributes/levelController';
import * as magicSchoolController from '../controllers/attributes/magicSchoolController';
import * as monsterController from '../controllers/attributes/monsterController';
import * as proficiencyController from '../controllers/attributes/proficiencyController';
import * as raceController from '../controllers/attributes/raceController';
import * as skillController from '../controllers/attributes/skillController';
import * as spellcastingController from '../controllers/attributes/spellcastingController';
import * as spellController from '../controllers/attributes/spellController';
import * as startingEquipmentController from '../controllers/attributes/startingEquipmentController';
import * as subclassController from '../controllers/attributes/subclassController';
import * as subraceController from '../controllers/attributes/subraceController';
import * as traitController from '../controllers/attributes/traitController';
import * as weaponPropertyController from '../controllers/attributes/weaponPropertyController';


const router = new Router();

router.get('/ability-scores', catchError(abilityScoreController.index));
router.get('/classes', catchError(classController.index));
router.get('/conditions', catchError(conditionController.index));
router.get('/damage-types', catchError(damageController.index));
router.get('/equipment-categories', catchError(equipmentCategoryController.index));
router.get('/equipment', catchError(equipmentController.index));
router.get('/features', catchError(featureController.index));
router.get('/languages', catchError(languageController.index));
router.get('/levels', catchError(levelController.index));
router.get('/magic-schools', catchError(magicSchoolController.index));
router.get('/monsters', catchError(monsterController.index));
router.get('/proficiencies', catchError(proficiencyController.index));
router.get('/races', catchError(raceController.index));
router.get('/skills', catchError(skillController.index));
router.get('/spellcasting', catchError(spellcastingController.index));
router.get('/spells', catchError(spellController.index));
router.get('/starting-equipment', catchError(startingEquipmentController.index));
router.get('/subclasses', catchError(subclassController.index));
router.get('/subraces', catchError(subraceController.index));
router.get('/traits', catchError(traitController.index));
router.get('/weapon-properties', catchError(weaponPropertyController.index));

export default router;
