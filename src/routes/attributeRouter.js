import { Router } from 'express';
import { catchError } from '../middlewares/errorHandlers';
import { makeIndex, makeShow } from '../controllers/attributeController';
import * as models from '../models/attributes';

const router = new Router();

router.get('/ability-scores', catchError(makeIndex(models.AbilityScore)));
router.get('/classes', catchError(makeIndex(models.CharacterClass)));
router.get('/conditions', catchError(makeIndex(models.Condition)));
router.get('/damage-types', catchError(makeIndex(models.DamageType)));
router.get('/equipment-categories', catchError(makeIndex(models.EquipmentCategory)));
router.get('/equipment', catchError(makeIndex(models.Equipment)));
router.get('/features', catchError(makeIndex(models.Feature)));
router.get('/languages', catchError(makeIndex(models.Language)));
router.get('/levels', catchError(makeIndex(models.Level)));
router.get('/magic-schools', catchError(makeIndex(models.MagicSchool)));
router.get('/monsters', catchError(makeIndex(models.Monster)));
router.get('/proficiencies', catchError(makeIndex(models.Proficiency)));
router.get('/races', catchError(makeIndex(models.Race)));
router.get('/skills', catchError(makeIndex(models.Skill)));
router.get('/spellcasting', catchError(makeIndex(models.Spellcasting)));
router.get('/spells', catchError(makeIndex(models.Spell)));
router.get('/starting-equipment', catchError(makeIndex(models.StartingEquipment)));
router.get('/subclasses', catchError(makeIndex(models.Subclass)));
router.get('/subraces', catchError(makeIndex(models.Subrace)));
router.get('/traits', catchError(makeIndex(models.Trait)));
router.get('/weapon-properties', catchError(makeIndex(models.WeaponProperty)));

router.get('/ability-scores/:_id', catchError(makeShow(models.AbilityScore)));
router.get('/classes/:_id', catchError(makeShow(models.CharacterClass)));
router.get('/conditions/:_id', catchError(makeShow(models.Condition)));
router.get('/damage-types/:_id', catchError(makeShow(models.DamageType)));
router.get('/equipment-categories/:_id', catchError(makeShow(models.EquipmentCategory)));
router.get('/equipment/:_id', catchError(makeShow(models.Equipment)));
router.get('/features/:_id', catchError(makeShow(models.Feature)));
router.get('/languages/:_id', catchError(makeShow(models.Language)));
router.get('/levels/:_id', catchError(makeShow(models.Level)));
router.get('/magic-schools/:_id', catchError(makeShow(models.MagicSchool)));
router.get('/monsters/:_id', catchError(makeShow(models.Monster)));
router.get('/proficiencies/:_id', catchError(makeShow(models.Proficiency)));
router.get('/races/:_id', catchError(makeShow(models.Race)));
router.get('/skills/:_id', catchError(makeShow(models.Skill)));
router.get('/spellcasting/:_id', catchError(makeShow(models.Spellcasting)));
router.get('/spells/:_id', catchError(makeShow(models.Spell)));
router.get('/starting-equipment/:_id', catchError(makeShow(models.StartingEquipment)));
router.get('/subclasses/:_id', catchError(makeShow(models.Subclass)));
router.get('/subraces/:_id', catchError(makeShow(models.Subrace)));
router.get('/traits/:_id', catchError(makeShow(models.Trait)));
router.get('/weapon-properties/:_id', catchError(makeShow(models.WeaponProperty)));

export default router;
